[{"/home/dci-st119/Documents/all-Desktop/MYPERSO-MEYOKO2020/threejs-all/three_responsive_scenes/src/index.js":"1","/home/dci-st119/Documents/all-Desktop/MYPERSO-MEYOKO2020/threejs-all/three_responsive_scenes/src/App.js":"2","/home/dci-st119/Documents/all-Desktop/MYPERSO-MEYOKO2020/threejs-all/three_responsive_scenes/src/serviceWorkerRegistration.js":"3","/home/dci-st119/Documents/all-Desktop/MYPERSO-MEYOKO2020/threejs-all/three_responsive_scenes/src/reportWebVitals.js":"4","/home/dci-st119/Documents/all-Desktop/MYPERSO-MEYOKO2020/threejs-all/three_responsive_scenes/src/components/about/About.js":"5","/home/dci-st119/Documents/all-Desktop/MYPERSO-MEYOKO2020/threejs-all/three_responsive_scenes/src/components/home/Home.js":"6","/home/dci-st119/Documents/all-Desktop/MYPERSO-MEYOKO2020/threejs-all/three_responsive_scenes/src/components/threeAnim/CubeTwoZoomInOut.js":"7","/home/dci-st119/Documents/all-Desktop/MYPERSO-MEYOKO2020/threejs-all/three_responsive_scenes/src/components/threeAnim/FlagOne.js":"8","/home/dci-st119/Documents/all-Desktop/MYPERSO-MEYOKO2020/threejs-all/three_responsive_scenes/src/components/threeAnim/CubeOne.js":"9","/home/dci-st119/Documents/all-Desktop/MYPERSO-MEYOKO2020/threejs-all/three_responsive_scenes/src/components/threeAnim/CubeOriginalZoom.js":"10","/home/dci-st119/Documents/all-Desktop/MYPERSO-MEYOKO2020/threejs-all/three_responsive_scenes/src/components/threeAnim/FlagZoom.js":"11"},{"size":823,"mtime":1610112816000,"results":"12","hashOfConfig":"13"},{"size":489,"mtime":1610113897203,"results":"14","hashOfConfig":"13"},{"size":5064,"mtime":1610112816016,"results":"15","hashOfConfig":"13"},{"size":364,"mtime":1610112816000,"results":"16","hashOfConfig":"13"},{"size":660,"mtime":1610113867943,"results":"17","hashOfConfig":"13"},{"size":1313,"mtime":1610126995369,"results":"18","hashOfConfig":"13"},{"size":11038,"mtime":1610124500117,"results":"19","hashOfConfig":"13"},{"size":2468,"mtime":1610112815452,"results":"20","hashOfConfig":"13"},{"size":2042,"mtime":1610112815444,"results":"21","hashOfConfig":"13"},{"size":5088,"mtime":1610112815444,"results":"22","hashOfConfig":"13"},{"size":5548,"mtime":1610119512323,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1w72vs9",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/home/dci-st119/Documents/all-Desktop/MYPERSO-MEYOKO2020/threejs-all/three_responsive_scenes/src/index.js",[],["51","52"],"/home/dci-st119/Documents/all-Desktop/MYPERSO-MEYOKO2020/threejs-all/three_responsive_scenes/src/App.js",[],"/home/dci-st119/Documents/all-Desktop/MYPERSO-MEYOKO2020/threejs-all/three_responsive_scenes/src/serviceWorkerRegistration.js",[],"/home/dci-st119/Documents/all-Desktop/MYPERSO-MEYOKO2020/threejs-all/three_responsive_scenes/src/reportWebVitals.js",[],"/home/dci-st119/Documents/all-Desktop/MYPERSO-MEYOKO2020/threejs-all/three_responsive_scenes/src/components/about/About.js",[],["53","54"],"/home/dci-st119/Documents/all-Desktop/MYPERSO-MEYOKO2020/threejs-all/three_responsive_scenes/src/components/home/Home.js",["55"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n//\nimport DtaImg from \"../../jsonData/images\";\nimport FlagZoom from \"../threeAnim/FlagZoom\";\n//  you only need to import the cube here and then add it to the jsx area\n//\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <header className=\"header-container\">\n        <nav>\n          <li>\n            <Link className=\"cube1 linnko\" to=\"/about\">\n              CUBE 1\n            </Link>\n          </li>\n\n          <li>\n            <Link className=\"cube2 linnko\" to=\"/about\">\n              CUBE 2\n            </Link>\n          </li>\n\n          <li>\n            <Link className=\"cube3 linnko\" to=\"/about\">\n              CUBE 3\n            </Link>\n          </li>\n\n          <li>\n            <Link className=\"cube4 linnko\" to=\"/about\">\n              CUBE 4\n            </Link>\n          </li>\n        </nav>\n        {/* \n        {DtaImg.map((img, index) => {\n          return (\n            <div className=\"img container\" key={img.id}>\n              <img className=\"navi-image\" src={img.img1} />;\n            </div>\n          );\n        })} */}\n\n        <FlagZoom />\n\n        <h2 className=\"texto-dos\">VOX ANON</h2>\n      </header>\n    );\n  }\n}\n\nexport default Home;\n","/home/dci-st119/Documents/all-Desktop/MYPERSO-MEYOKO2020/threejs-all/three_responsive_scenes/src/components/threeAnim/CubeTwoZoomInOut.js",["56"],"import React, { Component } from \"react\";\nimport * as THREE from \"three\";\n//\n//\n// 5 ***\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n\nconst style = {\n  height: 550, // we can control scene size by setting container dimensions\n};\n\n// const style = {\n//   height: 250, // we can control scene size by setting container dimensions\n// };\n\nclass CubeTwoZoomInOut extends Component {\n  /*\n \n                1\n \n \n */\n  componentDidMount() {\n    this.sceneSetup();\n    this.addCustomSceneObjects();\n    this.startAnimationLoop();\n    //\n    //\n    //\n    // 7  ******\n    //\n    window.addEventListener(\"resize\", this.handleWindowResize);\n  }\n  /*\n \n                9\n \n \n */\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleWindowResize);\n    window.cancelAnimationFrame(this.requestID);\n    this.controls.dispose();\n  }\n  /*\n \n                2\n \n \n */\n  // Standard scene setup in Three.js. Check \"Creating a scene\" manual for more information\n  // https://threejs.org/docs/#manual/en/introduction/Creating-a-scene\n  sceneSetup = () => {\n    // get container dimensions and use them for scene sizing\n    const width = this.el.clientWidth;\n    const height = this.el.clientHeight;\n    //\n    //\n    //\n    //\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(\n      75, // fov = field of view\n      width / height, // aspect ratio\n      0.1, // near plane\n      1000 // far plane\n    );\n    //\n    //\n    // 6  ******\n    //\n    this.camera.position.z = 2.6; // is used here to set some distance from a cube that is located at z = 0\n    // OrbitControls allow a camera to orbit around the object\n    // https://threejs.org/docs/#examples/controls/OrbitControls\n    this.controls = new OrbitControls(this.camera, this.el);\n    //\n    //\n    //\n    this.renderer = new THREE.WebGLRenderer({\n      // set the transparency of the scene, otherwise its black\n      alpha: true,\n      // will make the edges smooth\n      antialias: true,\n    });\n    this.renderer.setSize(width, height);\n    // here you append it to the jsx\n    this.el.appendChild(this.renderer.domElement); // mount using React ref\n  };\n  /*\n \n                3\n \n \n */\n  // Here should come custom code.\n  // Code below is taken from Three.js BoxGeometry example\n  // https://threejs.org/docs/#api/en/geometries/BoxGeometry\n  addCustomSceneObjects = () => {\n    const geometry = new THREE.BoxGeometry(2, 2, 2);\n\n    const loader = new THREE.TextureLoader();\n    // const material = new THREE.MeshPhongMaterial({\n    //   //   color: 0x156289,\n    //   emissive: 0x072534,\n    //   side: THREE.DoubleSide,\n    //   flatShading: true,\n    //   // color: 0x00ff00,\n\n    //   // KEEP IN MIND that its grabbing images from the public/images folder not the src\n    // });\n\n    //\n    const material = new THREE.MeshFaceMaterial([\n      new THREE.MeshBasicMaterial({\n        map: THREE.ImageUtils.loadTexture(\"/images/pol.svg\"),\n        emissive: 0x072534,\n        side: THREE.DoubleSide,\n        flatShading: true,\n      }),\n      new THREE.MeshBasicMaterial({\n        map: THREE.ImageUtils.loadTexture(\"/images/9.jpg\"),\n        emissive: 0x072534,\n        side: THREE.DoubleSide,\n        flatShading: true,\n      }),\n      new THREE.MeshBasicMaterial({\n        map: THREE.ImageUtils.loadTexture(\"/images/meyoko_img_welcomehome.jpg\"),\n        emissive: 0x072534,\n        side: THREE.DoubleSide,\n        flatShading: true,\n      }),\n      new THREE.MeshBasicMaterial({\n        map: THREE.ImageUtils.loadTexture(\"/images/city-camera.jpg\"),\n        emissive: 0x072534,\n        side: THREE.DoubleSide,\n        flatShading: true,\n      }),\n      new THREE.MeshBasicMaterial({\n        map: THREE.ImageUtils.loadTexture(\"/images/pol.svg\"),\n        emissive: 0x072534,\n        side: THREE.DoubleSide,\n        flatShading: true,\n      }),\n      new THREE.MeshBasicMaterial({\n        map: THREE.ImageUtils.loadTexture(\"/images/9.jpg\"),\n        emissive: 0x072534,\n        side: THREE.DoubleSide,\n        flatShading: true,\n      }),\n    ]);\n    //\n    this.cube = new THREE.Mesh(geometry, material);\n    this.scene.add(this.cube);\n\n    const lights = [];\n    lights[0] = new THREE.PointLight(0xffffff, 1, 0);\n    lights[1] = new THREE.PointLight(0xffffff, 1, 0);\n    lights[2] = new THREE.PointLight(0xffffff, 1, 0);\n\n    lights[0].position.set(0, 200, 0);\n    lights[1].position.set(100, 200, 100);\n    lights[2].position.set(-100, -200, -100);\n\n    this.scene.add(lights[0]);\n    this.scene.add(lights[1]);\n    this.scene.add(lights[2]);\n  };\n  /*\n \n                4\n \n \n */\n\n  startAnimationLoop = () => {\n    this.cube.rotation.x += 0.01;\n    this.cube.rotation.y += 0.01;\n\n    this.renderer.render(this.scene, this.camera);\n\n    // The window.requestAnimationFrame() method tells the browser that you wish to perform\n    // an animation and requests that the browser call a specified function\n    // to update an animation before the next repaint\n    this.requestID = window.requestAnimationFrame(this.startAnimationLoop);\n  };\n  /*\n \n                8\n \n \n */\n  handleWindowResize = () => {\n    const width = this.el.clientWidth;\n    const height = this.el.clientHeight;\n\n    this.renderer.setSize(width, height);\n    this.camera.aspect = width / height;\n\n    // Note that after making changes to most of camera properties you have to call\n    // .updateProjectionMatrix for the changes to take effect.\n    this.camera.updateProjectionMatrix();\n  };\n\n  render() {\n    return (\n      <div style={style} className=\"flagTwo\" ref={(ref) => (this.el = ref)} />\n    );\n  }\n}\n\nexport default CubeTwoZoomInOut;\n//\n//\n// END OF THE APP COMPONENT\n\n/*\n\n\n\n                        **\n                        NOTICE\n\n                        in the component below, you have the container,\n                        inside of this container you will import the App component\n                        that you have in the above code... LOOK UP!\n\n                        The window.requestAnimationFrame() method tells the browser that you wish to perform an animation and requests that the browser calls a specified function to update an animation before the next repaint. The method takes a callback as an argument to be invoked before the repaint.\n\n\n*/\n\n// class Container extends React.Component {\n//   state = { isMounted: true };\n\n//   render() {\n//     const { isMounted = true } = this.state;\n//     return (\n//       <>\n//         <button\n//           onClick={() =>\n//             this.setState((state) => ({ isMounted: !state.isMounted }))\n//           }\n//         >\n//           {isMounted ? \"Unmount\" : \"Mount\"}\n//         </button>\n//         {isMounted && <CubeTwoZoomInOut />}\n//         {isMounted && <div>Scroll to zoom, drag to rotate</div>}\n//       </>\n//     );\n//   }\n// }\n\n// export default Container;\n\n/*\n\nORIGINAL FROM THIS WEBSITE\n\n\nhttps://codeburst.io/react-16-three-js-integration-tips-2019-b6afe19c0b83\n\n\n\n\n\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n\nconst style = {\n  height: 250 // we can control scene size by setting container dimensions\n};\n\nclass App extends Component {\n  componentDidMount() {\n    this.sceneSetup();\n    this.addCustomSceneObjects();\n    this.startAnimationLoop();\n    window.addEventListener(\"resize\", this.handleWindowResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleWindowResize);\n    window.cancelAnimationFrame(this.requestID);\n    this.controls.dispose();\n  }\n\n  // Standard scene setup in Three.js. Check \"Creating a scene\" manual for more information\n  // https://threejs.org/docs/#manual/en/introduction/Creating-a-scene\n  sceneSetup = () => {\n    // get container dimensions and use them for scene sizing\n    const width = this.el.clientWidth;\n    const height = this.el.clientHeight;\n\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(\n      75, // fov = field of view\n      width / height, // aspect ratio\n      0.1, // near plane\n      1000 // far plane\n    );\n    this.camera.position.z = 5; // is used here to set some distance from a cube that is located at z = 0\n    // OrbitControls allow a camera to orbit around the object\n    // https://threejs.org/docs/#examples/controls/OrbitControls\n    this.controls = new OrbitControls(this.camera, this.el);\n    this.renderer = new THREE.WebGLRenderer();\n    this.renderer.setSize(width, height);\n    this.el.appendChild(this.renderer.domElement); // mount using React ref\n  };\n\n  // Here should come custom code.\n  // Code below is taken from Three.js BoxGeometry example\n  // https://threejs.org/docs/#api/en/geometries/BoxGeometry\n  addCustomSceneObjects = () => {\n    const geometry = new THREE.BoxGeometry(2, 2, 2);\n    const material = new THREE.MeshPhongMaterial({\n      color: 0x156289,\n      emissive: 0x072534,\n      side: THREE.DoubleSide,\n      flatShading: true\n    });\n    this.cube = new THREE.Mesh(geometry, material);\n    this.scene.add(this.cube);\n\n    const lights = [];\n    lights[0] = new THREE.PointLight(0xffffff, 1, 0);\n    lights[1] = new THREE.PointLight(0xffffff, 1, 0);\n    lights[2] = new THREE.PointLight(0xffffff, 1, 0);\n\n    lights[0].position.set(0, 200, 0);\n    lights[1].position.set(100, 200, 100);\n    lights[2].position.set(-100, -200, -100);\n\n    this.scene.add(lights[0]);\n    this.scene.add(lights[1]);\n    this.scene.add(lights[2]);\n  };\n\n  startAnimationLoop = () => {\n    this.cube.rotation.x += 0.01;\n    this.cube.rotation.y += 0.01;\n\n    this.renderer.render(this.scene, this.camera);\n\n    // The window.requestAnimationFrame() method tells the browser that you wish to perform\n    // an animation and requests that the browser call a specified function\n    // to update an animation before the next repaint\n    this.requestID = window.requestAnimationFrame(this.startAnimationLoop);\n  };\n\n  handleWindowResize = () => {\n    const width = this.el.clientWidth;\n    const height = this.el.clientHeight;\n\n    this.renderer.setSize(width, height);\n    this.camera.aspect = width / height;\n\n    // Note that after making changes to most of camera properties you have to call\n    // .updateProjectionMatrix for the changes to take effect.\n    this.camera.updateProjectionMatrix();\n  };\n\n  render() {\n    return <div style={style} ref={ref => (this.el = ref)} />;\n  }\n}\n\nclass Container extends React.Component {\n  state = { isMounted: true };\n\n  render() {\n    const { isMounted = true } = this.state;\n    return (\n      <>\n        <button\n          onClick={() =>\n            this.setState(state => ({ isMounted: !state.isMounted }))\n          }\n        >\n          {isMounted ? \"Unmount\" : \"Mount\"}\n        </button>\n        {isMounted && <App />}\n        {isMounted && <div>Scroll to zoom, drag to rotate</div>}\n      </>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Container />, rootElement);\n\n\n*/\n","/home/dci-st119/Documents/all-Desktop/MYPERSO-MEYOKO2020/threejs-all/three_responsive_scenes/src/components/threeAnim/FlagOne.js",[],"/home/dci-st119/Documents/all-Desktop/MYPERSO-MEYOKO2020/threejs-all/three_responsive_scenes/src/components/threeAnim/CubeOne.js",[],"/home/dci-st119/Documents/all-Desktop/MYPERSO-MEYOKO2020/threejs-all/three_responsive_scenes/src/components/threeAnim/CubeOriginalZoom.js",[],"/home/dci-st119/Documents/all-Desktop/MYPERSO-MEYOKO2020/threejs-all/three_responsive_scenes/src/components/threeAnim/FlagZoom.js",[],["57","58"],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"59","replacedBy":"63"},{"ruleId":"61","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":4,"column":8,"nodeType":"67","messageId":"68","endLine":4,"endColumn":14},{"ruleId":"65","severity":1,"message":"69","line":101,"column":11,"nodeType":"67","messageId":"68","endLine":101,"endColumn":17},{"ruleId":"59","replacedBy":"70"},{"ruleId":"61","replacedBy":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],["72"],["73"],"no-unused-vars","'DtaImg' is defined but never used.","Identifier","unusedVar","'loader' is assigned a value but never used.",["72"],["73"],"no-global-assign","no-unsafe-negation"]